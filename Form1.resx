<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>