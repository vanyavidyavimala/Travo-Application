<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACICQiA
        kIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiA
        kIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiAkIgJCICQiA
        kIgJCID/2Q==
</value>
  </data>
</root>